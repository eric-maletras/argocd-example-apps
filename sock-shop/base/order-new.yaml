kind: Pod
apiVersion: v1
metadata:
  name: orders-65879c665-2zp2x
  generateName: orders-65879c665-
  namespace: sock-shop
  uid: 1695bbab-683b-4c94-abb2-e2f5416dfbd6
  resourceVersion: '1785190'
  creationTimestamp: '2022-09-02T18:52:01Z'
  labels:
    name: orders-new
    pod-template-hash: 65879c665
  ownerReferences:
    - apiVersion: apps/v1
      kind: ReplicaSet
      name: orders-65879c665
      uid: 983fb27e-94ee-4940-ad66-a4ba8a99cc44
      controller: true
      blockOwnerDeletion: true
spec:
  volumes:
    - name: tmp-volume
      emptyDir:
        medium: Memory
    - name: kube-api-access-27zk4
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
        defaultMode: 420
  containers:
    - name: orders
      image: weaveworksdemos/orders:0.4.7
      ports:
        - containerPort: 80
          protocol: TCP
      env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: >-
            -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 200m
          memory: 500Mi
      volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: kube-api-access-27zk4
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      livenessProbe:
        httpGet:
          path: /health
          port: 80
          scheme: HTTP
        initialDelaySeconds: 300
        timeoutSeconds: 1
        periodSeconds: 3
        successThreshold: 1
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /health
          port: 80
          scheme: HTTP
        initialDelaySeconds: 180
        timeoutSeconds: 1
        periodSeconds: 3
        successThreshold: 1
        failureThreshold: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
      securityContext:
        capabilities:
          add:
            - NET_BIND_SERVICE
          drop:
            - all
        runAsUser: 10001
        runAsNonRoot: true
        readOnlyRootFilesystem: true
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  nodeSelector:
    beta.kubernetes.io/os: linux
  serviceAccountName: default
  serviceAccount: default
  nodeName: pool-18sxjqckn-7fw56
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
